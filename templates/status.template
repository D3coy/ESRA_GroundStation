<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet" href="/static/css/style.css">
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col-4 offset-4" style="text-align: center">
                <img src="/static/png/Clark_Aerospace_Logo.png" class="img-fluid">
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div id="3dPlot" style="margin: 0 auto; height: 600px; width: 600px"></div>
            </div>
        </div>
    </div>

    <!-- Imports -->
    <script src="/static/js/jquery.min.js"></script>
    <script src="/static/js/highcharts.js"></script>
    <script src="/static/js/highcharts-3d.js"></script>
    <script src="/static/js/logic.js"></script>
    <script>
        Highcharts.setOptions({
            colors: $.map(Highcharts.getOptions().colors, function (color) {
                return {
                    radialGradient: {
                        cx: 0.4,
                        cy: 0.3,
                        r: 0.5
                    },
                    stops: [
                        [0, color],
                        [1, Highcharts.Color(color).brighten(-0.2).get('rgb')]
                    ]
                };
            })
        });

        // Set up the chart
        var chart = new Highcharts.Chart({
            chart: {
                renderTo: '3dPlot',
                margin: 100,
                type: 'scatter3d',
                animation: false,
                options3d: {
                    enabled: true,
                    alpha: 10,
                    beta: 30,
                    depth: 250,
                    viewDistance: 5,
                    fitToPlot: false,
                    frame: {
                        bottom: {
                            size: 1,
                            color: 'rgba(0,0,0,0.02)'
                        },
                        back: {
                            size: 1,
                            color: 'rgba(0,0,0,0.04)'
                        },
                        side: {
                            size: 1,
                            color: 'rgba(0,0,0,0.06)'
                        }
                    }
                }
            },
            title: {
                text: 'Flight Position'
            },
            plotOptions: {
                scatter: {
                    width: {{.Axis.Lat}},
                    height: {{.Axis.Altitude}},
                    depth: {{.Axis.Lon}}
                }
            },
            yAxis: {
                min: 0,
                max: {{.Axis.Altitude}}
            },
            xAxis: {
                min: {{.Axis.MinLat}},
                max: {{.Axis.MaxLat}}
            },
            zAxis: {
                min: {{.Axis.MinLon}},
                max: {{.Axis.MaxLon}}
            },
            legend: {
                enabled: false
            },
            series: [{
                name: 'Flight',
                colorByPoint: false,
                data: [
                    {{range .Points}}
                        [{{.Latitude}}, {{.Altitude}}, {{.Longitude}}],
                    {{end}}
                ]
            }]
        });


        // Add mouse and touch events for rotation
        (function (H) {
            function dragStart(eStart) {
                eStart = chart.pointer.normalize(eStart);

                var posX = eStart.chartX,
                    posY = eStart.chartY,
                    alpha = chart.options.chart.options3d.alpha,
                    beta = chart.options.chart.options3d.beta,
                    sensitivity = 5; // lower is more sensitive

                function drag(e) {
                    // Get e.chartX and e.chartY
                    e = chart.pointer.normalize(e);

                    chart.update({
                        chart: {
                            options3d: {
                                alpha: alpha + (e.chartY - posY) / sensitivity,
                                beta: beta + (posX - e.chartX) / sensitivity
                            }
                        }
                    }, undefined, undefined, false);
                }

                chart.unbindDragMouse = H.addEvent(document, 'mousemove', drag);
                chart.unbindDragTouch = H.addEvent(document, 'touchmove', drag);

                H.addEvent(document, 'mouseup', chart.unbindDragMouse);
                H.addEvent(document, 'touchend', chart.unbindDragTouch);
            }
            H.addEvent(chart.container, 'mousedown', dragStart);
            H.addEvent(chart.container, 'touchstart', dragStart);
        }(Highcharts));
    </script>
</body>

</html>